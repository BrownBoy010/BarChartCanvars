// <auto-generated />
using System;
using BarChartCanvars.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarChartCanvars.Migrations
{
    [DbContext(typeof(InteractionsContext))]
    partial class InteractionsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BarChartCanvars.Models.CurrentInteraction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IP");

                    b.Property<string>("PageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referrer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SaveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrentInteractions");
                });

            modelBuilder.Entity("BarChartCanvars.Models.DeviceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BrowserCanJavaScript")
                        .HasColumnType("bit");

                    b.Property<bool>("BrowserHtml5AudioCanAudio")
                        .HasColumnType("bit");

                    b.Property<bool>("BrowserHtml5VideoCanVideo")
                        .HasColumnType("bit");

                    b.Property<bool>("CanTouchScreen")
                        .HasColumnType("bit");

                    b.Property<bool>("DeviceIsSmartphone")
                        .HasColumnType("bit");

                    b.Property<string>("DeviceModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceOperatingSystemModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceOperatingSystemVendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceType")
                        .HasColumnType("int");

                    b.Property<string>("DeviceVendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HardwareDisplayHeight")
                        .HasColumnType("int");

                    b.Property<int>("HardwareDisplayWidth")
                        .HasColumnType("int");

                    b.Property<bool>("IsBot")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SaveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceDetails");
                });

            modelBuilder.Entity("BarChartCanvars.Models.InterationDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DeviceInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("GeoIpid")
                        .HasColumnType("int")
                        .HasColumnName("GeoIPId");

                    b.Property<int?>("PageEventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DeviceInfoId" }, "IX_InterationData_DeviceInfoId");

                    b.HasIndex(new[] { "GeoIpid" }, "IX_InterationData_GeoIPId");

                    b.HasIndex(new[] { "PageEventId" }, "IX_InterationData_PageEventId");

                    b.ToTable("InterationData");
                });

            modelBuilder.Entity("BarChartCanvars.Models.PageEventDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageEventData");
                });

            modelBuilder.Entity("BarChartCanvars.Models.UserLoginDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Login")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Logout")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserLoginDetails");
                });

            modelBuilder.Entity("BarChartCanvars.Models.WhoIsInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dns")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DNS");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IP");

                    b.Property<string>("Isp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ISP");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("MetroCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaveDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WhoIsInformation", (string)null);
                });

            modelBuilder.Entity("BarChartCanvars.Models.InterationDatum", b =>
                {
                    b.HasOne("BarChartCanvars.Models.DeviceDetail", "DeviceInfo")
                        .WithMany("InterationData")
                        .HasForeignKey("DeviceInfoId");

                    b.HasOne("BarChartCanvars.Models.WhoIsInformation", "GeoIp")
                        .WithMany("InterationData")
                        .HasForeignKey("GeoIpid");

                    b.HasOne("BarChartCanvars.Models.PageEventDatum", "PageEvent")
                        .WithMany("InterationData")
                        .HasForeignKey("PageEventId");

                    b.Navigation("DeviceInfo");

                    b.Navigation("GeoIp");

                    b.Navigation("PageEvent");
                });

            modelBuilder.Entity("BarChartCanvars.Models.DeviceDetail", b =>
                {
                    b.Navigation("InterationData");
                });

            modelBuilder.Entity("BarChartCanvars.Models.PageEventDatum", b =>
                {
                    b.Navigation("InterationData");
                });

            modelBuilder.Entity("BarChartCanvars.Models.WhoIsInformation", b =>
                {
                    b.Navigation("InterationData");
                });
#pragma warning restore 612, 618
        }
    }
}
