@{
    ViewBag.Title = "last visit";
}

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<div id="chartContainer"></div>
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KWB31FNF34"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-KWB31FNF34');
</script>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            var pageUrlData = @Html.Raw(Json.Serialize(ViewBag.PageUrlData));
            var countData = @Html.Raw(Json.Serialize(ViewBag.CountData));

            console.log('countData', countData);

            if (pageUrlData && pageUrlData.length > 0 && countData && countData.length > 0) {

                var dataPoints = [];
                for (var i = 0; i < pageUrlData.length; i++) {
                    dataPoints.push({ label: pageUrlData[i], y: countData[i] });
                }
                console.log('dataPoints', dataPoints);
                var chart = new CanvasJS.Chart("chartContainer", {
                    width: 600,
                    height: 400,
                    theme: "light2",
                    animationEnabled: true,
                    title: {
                        text: "User Drops"
                    },
                    axisX: {
                        title: "Page URL",
                        labelFontSize: 10

                    },
                    axisY: {
                        title: "User Count",
                        labelFontSize: 10
                    },
                    data: [
                        {
                            type: "column",
                            dataPoints: dataPoints
                        }
                    ]
                });
                chart.render();
            }
            else {
                console.error("PageUrlData or CountData is null or empty.");
            }
        });
    </script>
}
