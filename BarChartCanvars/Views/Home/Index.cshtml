@{
    ViewData["Title"] = "Top User Interactions";
}

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<div id="chartContainer"></div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            fetch('@Url.Action("GetTopUserIds", "Home")')
                .then(response => response.json())
                .then(data => {
                    var userInteractions = data;
                    var dataPoints = [];

                    for (var userId in userInteractions) {
                        var pageUrl = userInteractions[userId];
                        var numericValue = 1;

                        switch (pageUrl) {
                            case 'Businessowners/Details':
                                numericValue = 2;
                            break;
                            case 'Businessowners/Coverages':
                                numericValue = 3;
                            break;
                            case 'Businessowners/Additional Coverages':
                                numericValue = 4;
                            break;
                            case 'Locations':
                                numericValue = 5;
                                break;
                            case 'State Specific Info/Coverages':
                                numericValue = 6;
                                break;
                            case 'State Specific Info/Additional Coverages':
                                numericValue = 7;
                                break;

                            case 'Buildings/Classifications':
                                numericValue = 4;
                                break;
                            case 'Blankets':
                                numericValue = 5;
                                break;
                            case 'Mortgagees':
                                        numericValue = 6;
                                break;
                            case 'UW Questions':
                                numericValue = 7;
                                break;
                        }
                        dataPoints.push({ label: userId, y: numericValue });
                    }
                    console.log('dataPoints', dataPoints);

                    var chart = new CanvasJS.Chart("chartContainer", {
                        width: 600,
                        height: 400,
                        theme: "light2",
                        animationEnabled: true,
                        title: {
                            text: "Top User Interactions"
                        },
                        axisX: {
                            title: "User ID"
                        },
                        axisY: {
                            title: "Page URL",
                            labelFormatter: function (e) {
                                if (e.value === 1) {
                                    return "Policy Details";
                                } else if (e.value === 2) {
                                    return "Businessowners/Details";
                                } else if (e.value === 3) {
                                    return "Businessowners/Coverages";
                                } else if (e.value === 4) {
                                    return "Businessowners/Additional Coverages";
                                } else if (e.value === 5) {
                                    return "Locations";
                                } else if (e.value === 6) {
                                    return "State Specific Info/Coverages";
                                } else if (e.value === 7) {
                                    return "State Specific Info/Additional Coverages";
                                } else if (e.value === 4) {
                                    return "Buildings/Classifications";
                                } else if (e.value === 5) {
                                    return "Blankets";
                                } else if (e.value === 6) {
                                    return "Mortgagees";
                                } else if (e.value === 7) {
                                    return "UW Questions";
                                }
                                else {
                                    return "";
                                }                                
                            }
                        },
                        data: [
                            {
                                type: "column",
                                dataPoints: dataPoints
                            }
                        ]
                    });
                    chart.render();
                })
                .catch(error => {
                    console.error('Error fetching top user interactions:', error);
                });
        });
    </script>
}

























@* @{
    ViewData["Title"] = "Top User Interactions";
}

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

<div id="chartContainer"></div>

@section Scripts {
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            fetch('@Url.Action("GetTopUserIds", "Home")')
                .then(response => response.json())
                .then(data => {
                    var topUserIds = data;
                    console.log('length : ', data.length);
                    console.log('length : ', topUserIds.length);
                    console.log('topUserIds ', topUserIds);

                    var dataPoints = [];
                    for (var i = 0; i < topUserIds.length; i++) {
                        var userId = toptopUserIds[i].userId;
                        var pageUrl = toptopUserIds[i].pageUrl;

                        dataPoints.push({ label: userId, y: 3 })
                        }
            // console.log('dataPointsss ', dataPoints);
                    // for (var key in data) {
                    //     dataPoints.push({ label: key, y: data[key] });
                    // }
                    console.log('dataPoints ', dataPoints);
                    // for (var i = 0; i < topUserIds.length; i++) {
                    //     dataPoints.push({ label: topUserIds[i + 1], y: topUserIds[i] });
                    // }

                    var chart = new CanvasJS.Chart("chartContainer", {
                        width: 600,
                        height: 400,
                        theme: "light2",
                        animationEnabled: true,
                        title: {
                            text: "Top User IDs"
                        },
                        axisX: {
                            title: "User ID"
                        },
                        axisY: {
                            title: "",
                            labelFormatter: function (e) {
                                //return e;
                                if (e.value === 1) {
                                    return "Home";
                                } else if (e.value === 2) {
                                    return "ProductList";
                                } else if (e.value === 3) {
                                    return "ShoppingCart";
                                } else if (e.value === 4) {
                                    return "Checkout";
                                } else {
                                    return "";
                                }
                            }
                        },
                        data: [
                            {
                                type: "column",
                                dataPoints: dataPoints
                            }
                        ]
                    });
                    chart.render();
                })
                .catch(error => {
                    console.error('Error fetching top user IDs:', error);
                });
        });
    </script>
} *@
















@* @{
    ViewData["Title"] = "Home";
}

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

<div id="chartContainer"></div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var chart = new CanvasJS.Chart("chartContainer", {
                width: 800,
                height: 500,
                theme: "light2",
                animationEnabled: true,
                title: {
                    text: "Simple Column Chart"
                },
                subtitles: [
                    { text: "" }
                ],
                axisY: {
                    title: "",
                    labelFormatter: function (e) {
                        if (e.value === 1) {
                            return "Quote Wizard ";
                        } else if (e.value === 2) {
                            return "Policy Details ";
                        } else if (e.value === 3) {
                            return "BusinessOwners";
                        } else if (e.value === 4) {
                            return "location";
                        } else if (e.value === 5) {
                            return "Buildings";
                        } else if (e.value === 6) {
                            return "submission ";
                        } else if (e.value === 7) {
                            return "";
                        } else {
                            return "";
                        }
                    }
                },
                data: [
                    {
                        type: "column",
                        dataPoints: [
                            { label: "User1", y: 1 },
                            { label: "User2", y: 2 },
                            { label: "User3", y: 3 },
                            { label: "User4", y: 4 },
                            { label: "User5", y: 5 },
                            { label: "User6", y: 6 },
                            { label: "User7", y: 3 }
                        ]
                    }
                ]
            });
            chart.render();
        });
    </script>
} *@

